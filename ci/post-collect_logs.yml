---
# Based on https://raw.githubusercontent.com/openstack-k8s-operators/nova-operator/bc10c4f579f8538899ac7bc5f87bfdb62d7042a4/ci/nova-operator-base/playbooks/collect-logs.yaml
- hosts: all
  name: Create zuul-output log dir
  gather_facts: false
  tasks:
    - name: Create log dir
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/zuul-output/logs"
        state: directory
        mode: "0755"

- hosts: controller
  name: Collect logs on the controller
  gather_facts: false
  tasks:
    - name: "Create log dir"
      ansible.builtin.file:
        path: "{{ logfile_dir }}"
        state: directory
        mode: "0755"

    - name: "Set the sto_dir if it isn't already set"
      ansible.builtin.set_fact:
        sto_dir: '{{ ansible_env.HOME }}/{{ zuul.project.src_dir }}'
      when: sto_dir | default('') | length == 0

    - name: "Get vars common to all jobs"
      ansible.builtin.include_vars:
        file: "vars-zuul-common.yml"

    - name: "Get scenario-specific vars"
      ansible.builtin.include_vars:
        file: "vars-{{ scenario }}.yml"

    - name: "Log into the cluster"
      ansible.builtin.import_role:
        name: rhol_crc
        tasks_from: add_crc_creds.yml

    - name: "Get builds"
      ansible.builtin.shell:
        cmd: |
          echo "*** [INFO] Showing oc get builds" > {{ logfile_dir }}/post_oc_get_builds.log 2>&1
          oc get builds -oyaml >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
          echo "*** [INFO] Showing oc get builds -oyaml" >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
          oc get builds -oyaml >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
          cat {{ logfile_dir }}/post_oc_get_builds.log
      ignore_errors: true
      changed_when: false

    - name: "Get subscription details"
      ansible.builtin.shell:
        cmd: |
          oc get subscriptions > {{ logfile_dir }}/post_oc_get_subscriptions.log 2>&1
          oc describe subscription service-telemetry-operator >> {{ logfile_dir }}/post_oc_get_subscriptions.log 2>&1
          cat {{ logfile_dir}}/post_oc_get_subscriptions.log

    - name: "Get smoketest logs"
      ansible.builtin.shell:
        cmd: |
          echo "*** [INFO] Showing oc get all..." > {{ logfile_dir }}/oc_log.log 2>&1
          oc get all >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Showing servicemonitors..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc get servicemonitor -o yaml >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from smoketest containers..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "job-name=stf-smoketest-smoke1" -o jsonpath='{.items[0].metadata.name}')" -c smoketest-collectd >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "job-name=stf-smoketest-smoke1" -o jsonpath='{.items[0].metadata.name}')" -c smoketest-ceilometer >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from qdr..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l application=default-interconnect -o jsonpath='{.items[0].metadata.name}')" >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from smart gateways..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-coll-meter" -o jsonpath='{.items[0].metadata.name}')" -c bridge >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-coll-meter" -o jsonpath='{.items[0].metadata.name}')" -c sg-core >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-coll-event" -o jsonpath='{.items[0].metadata.name}')" -c bridge >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-coll-event" -o jsonpath='{.items[0].metadata.name}')" -c sg-core >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-ceil-meter" -o jsonpath='{.items[0].metadata.name}')" -c bridge >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-ceil-meter" -o jsonpath='{.items[0].metadata.name}')" -c sg-core >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-ceil-event" -o jsonpath='{.items[0].metadata.name}')" -c bridge >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-ceil-event" -o jsonpath='{.items[0].metadata.name}')" -c sg-core >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-sens-meter" -o jsonpath='{.items[0].metadata.name}')" -c bridge >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l "smart-gateway=default-cloud1-sens-meter" -o jsonpath='{.items[0].metadata.name}')" -c sg-core >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from smart gateway operator..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l app=smart-gateway-operator -o jsonpath='{.items[0].metadata.name}')" >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from service telemetry operator..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l name=service-telemetry-operator -ojsonpath='{ .items[0].metadata.name }')" >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from prometheus..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l prometheus=default -o jsonpath='{.items[0].metadata.name}')" -c prometheus >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from elasticsearch..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l common.k8s.elastic.co/type=elasticsearch -o jsonpath='{.items[0].metadata.name}')" >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from snmp webhook..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l app=default-snmp-webhook -o jsonpath='{.items[0].metadata.name}')" >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1

          echo "*** [INFO] Logs from alertmanager..." >> {{ logfile_dir }}/oc_log.log 2>&1
          oc logs "$(oc get pod -l app.kubernetes.io/name=alertmanager -o jsonpath='{.items[0].metadata.name}')" -c alertmanager >> {{ logfile_dir }}/oc_log.log 2>&1
          echo >> {{ logfile_dir }}/oc_log.log 2>&1
          cat {{ logfile_dir }}/oc_log.log 2>&1
      retries: 3
      delay: 10

    - name: "Get image infos"
      ansible.builtin.shell:
        cmd: |
          echo "[INFO] oc get images" > {{ logfile_dir }}/post_oc_get_images.log 2>&1
          oc get images >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          echo "[INFO] oc get imagestreams" >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          oc get imagestream >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          #echo "[INFO] oc get images -oyaml" >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          #oc get images -oyaml >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          echo "[INFO] oc get imagestream -oyaml" >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          oc get imagestream -oyaml >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
          cat {{ logfile_dir }}/post_oc_get_images.log 2>&1
      register: post_oc_get_images
      retries: 3
      delay: 10

    - name: "Get STO info"
      ansible.builtin.shell:
        cmd: |
          oc describe pod $(oc get pod -l name=service-telemetry-operator -ojsonpath='{ .items[].metadata.name }') >> {{ logfile_dir }}/describe_sto.log 2>&1
      ignore_errors: true
      retries: 3
      delay: 10

    - name: "Question the deployment"
      ansible.builtin.shell:
        cmd: |
          echo "What images were created in the internal registry?" > {{ logfile_dir }}/post_question_deployment.log 2>&1
          oc get images | grep $(oc registry info --internal) >> {{ logfile_dir }}/post_question_deployment.log 2>&1
          echo "What state is the STO csv in?" >> {{ logfile_dir }}/post_question_deployment.log 2>&1
          oc get csv -n service-telemetry | grep service-telemetry-operator >> {{ logfile_dir }}/post_question_deployment.log 2>&1
          oc get csv -n service-telemetry-operator -oyaml >> {{ logfile_dir }}/post_question_deployment.log 2>&1
      register: output
      retries: 3
      delay: 10

    - name: "Copy generated logs"
      ansible.builtin.shell: |
        cp {{ ansible_env.HOME }}/*.log .
      args:
        chdir: "{{ ansible_user_dir }}/zuul-output/logs/controller"
      changed_when: true
      ignore_errors: true

- hosts: all
  name: Copy files from controller on node
  gather_facts: false
  tasks:
    - name: Copy files from controller on node
      ansible.builtin.include_role:
        name: fetch-output
