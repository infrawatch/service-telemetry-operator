---
# Based on https://raw.githubusercontent.com/openstack-k8s-operators/nova-operator/bc10c4f579f8538899ac7bc5f87bfdb62d7042a4/ci/nova-operator-base/playbooks/collect-logs.yaml
- hosts: all
  name: Create zuul-output log dir
  gather_facts: false
  tasks:
    - name: Create log dir
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/zuul-output/logs"
        state: directory
        mode: "0755"

- hosts: controller
  name: Collect logs on the controller
  gather_facts: false
  tasks:
    - name: "Set the sto_dir if it isn't already set"
      ansible.builtin.set_fact:
        sto_dir: '{{ ansible_env.HOME }}/{{ zuul.project.src_dir }}'
      when: sto_dir | default('') | length == 0

    - name: "Get vars common to all jobs"
      ansible.builtin.include_vars:
        file: "vars-zuul-common.yml"

    - name: "Get scenario-specific vars"
      ansible.builtin.include_vars:
        file: "vars-{{ scenario }}.yml"

    - name: "Create log dir"
      ansible.builtin.file:
        path: "{{ logfile_dir }}"
        state: directory
        mode: "0755"

    - name: "Log into the cluster"
      ansible.builtin.import_role:
        name: rhol_crc
        tasks_from: add_crc_creds.yml

    - name: "Gather logs from stf deployment"
      ansible.builtin.import_role:
        name: '../build/stf-collect-logs'

    - name: "Get pods and describe non-completed, non-running pods"
      ansible.builtin.shell:
        cmd: |
          echo "*** oc get pods ***" > {{ logfile_dir }}/oc_get_pods.log 2>&1
          oc -n {{ namespace }} get pods >> {{ logfile_dir }}/oc_get_pods.log 2>&1

          for pod in $(oc get pods | grep -v NAME | grep -v Running | awk '{ print $1 }');
          do
            oc -n {{ namespace }} describe pod $pod > {{ logfile_dir }}/post_oc_describe_pod_${pod}.log 2>&1
          done
      ignore_errors: true
      retries: 3
      delay: 10

    - name: "Get build details"
      ansible.builtin.shell:
        cmd: |
          for build in $(oc -n {{ namespace }} get builds  -o json| jq -r '.items[].metadata.name'); do oc -n {{ namespace }} describe build $build > {{ logfile_dir }}/post_oc_describe_build_${build}.log 2>&1; done

    - name: "Copy generated logs"
      ansible.builtin.shell: |
        cp {{ ansible_env.HOME }}/*.log .
      args:
        chdir: "{{ ansible_user_dir }}/zuul-output/logs/controller"
      changed_when: true
      ignore_errors: true

- hosts: all
  name: Copy files from controller on node
  gather_facts: false
  tasks:
    - name: Copy files from controller on node
      ansible.builtin.include_role:
        name: fetch-output
