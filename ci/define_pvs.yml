---
- name: "Define Pvs"
  hosts: controller
  tasks:
    - name: "Log into the cluster"
      ansible.builtin.import_role:
        name: rhol_crc
        tasks_from: add_crc_creds.yml
    
    # For testing only , will be removed when integrated with prepare.yml
    - name: "Get vars common to all jobs"
      ansible.builtin.include_vars:
        file: "vars-zuul-common.yml"
   
    - name: "Install make if not present"
      ansible.builtin.package:
        name: make
        state: present
      become: true

    - name: "Creating the Pvs" 
      ansible.builtin.shell: 
        cmd: |
          STORAGE_CLASS="{{ __service_telemetry_storage_persistent_storage_class }}" STORAGE_CAPACITY=20 make crc_storage
      register: make_output
      args:
        chdir: "{{ install_yamls_dir }}"

    - name: "Print make result"
      ansible.builtin.debug:
        var: make_output

    - name: "Get Pvs in '{{ namespace }}'"
      ansible.builtin.shell: 
        cmd: |
          oc get pv -n {{ namespace }}| grep {{ __service_telemetry_storage_persistent_storage_class }}
      register: pv_output

    - name: "Print get Pvs result"
      ansible.builtin.debug:
        var: pv_output.stdout_lines

    - name: "Show fail message if no pvs with type local_storage available"
      ansible.builtin.fail:
        msg: "Failed to create Pvs"
      when: pv_output.stdout_lines | length == 0

    - name: Get list of PVs
      ansible.builtin.shell:
        cmd: |
          oc get pv --no-headers -o custom-columns=":metadata.name" | grep {{ __service_telemetry_storage_persistent_storage_class }}
      register: pvs_result

    - name: Get the current default StorageClass
      ansible.builtin.shell:
        cmd: |
          oc get storageclass | grep "(default)" | awk '{print $1}'
      register: current_default_storageclass
      changed_when: false

    - name: Replace default StorageClass
      ansible.builtin.shell:
        cmd: |
          oc patch storageclass {{ current_default_storageclass.stdout }} -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
      when: current_default_storageclass.stdout is defined

    - name: Set new StorageClass as default
      ansible.builtin.shell:
        cmd: |
         oc patch storageclass {{ __service_telemetry_storage_persistent_storage_class }} -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

      