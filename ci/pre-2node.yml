---
- name: "Do pre-work to get kubeconfig"
  hosts: controller
  vars:
    ci_framework_dir: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/openstack-k8s-operators/ci-framework'].src_dir }}"
  environment:
    PATH: "~/.crc/bin:~/.crc/bin/oc:~/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: "Set the sto_dir if it isn't already set"
      ansible.builtin.set_fact:
        sto_dir: '{{ ansible_env.HOME }}/{{ zuul.projects["github.com/infrawatch/service-telemetry-operator"].src_dir }}'
      when: sto_dir | default('') | length == 0

    - name: "Run bootstrap playbook"
      ansible.builtin.shell:
        cmd: |
          ansible-playbook -e@{{ ansible_user_dir }}/ci-framework-data/artifacts/parameters/zuul-params.yml {{ ci_framework_dir }}/playbooks/01-bootstrap.yml -t packages
        chdir: "{{ ci_framework_dir }}"

    - name: Show cifmw_install_yamls_environment var
      ansible.builtin.debug:
        var: cifmw_install_yamls_environment

    - name: reset value of cifmw_install_yamls_environment
      ansible.builtin.set_fact:
        cifmw_install_yamls_environment: {}

    # Since we skipped bootstrap, the install_yamls role wasn't run, which means there's no "{{ cifmw_basedir|default(ansible_user_dir ~ '/ci-framework-data') }}/artifacts/parameters/install-yamls-params.yml file created. This file is expected by the openshift_login role.
    # I think this can be addressed by adding a when to the task that accesses the params file, since it is only accessed to update the file. The update only takes place if a certain var is set.
    - name: workaround - create install_yamls paramaterers file
      ansible.builtin.shell:
        cmd: |
          touch {{ cifmw_basedir|default(ansible_user_dir ~ '/ci-framework-data') }}/artifacts/parameters/install-yamls-params.yml
      ignore_errors: true

    - name: Run ci_framework infra playbook
      ansible.builtin.shell:
        cmd: |
          ansible-playbook -e cifmw_use_opn=false -e cifmw_use_devscripts=false -e cifmw_basedir={{ ansible_user_dir }}/ci-framework-data/ -e cifmw_openshift_setup_skip_internal_registry_tls_verify=true playbooks/02-infra.yml
        chdir: "{{ ci_framework_dir }}"

    - name: Run make targets for setup
      community.general.make:
        chdir: '{{ ansible_env.HOME }}/{{ zuul.projects["github.com/openstack-k8s-operators/ci-framework"].src_dir }}'
        target: "{{ item }}"
      with_items:
        - setup_tests
        - setup_molecule

