- name: WARNING Please migrate your v1alpha1 ServiceTelemetry object to v1beta1
  fail:
    msg: "[WARNING] ServiceTelemetry/v1alpha1 is deprecated and support will be removed in a future version of Service Telemetry Framework. Please migrate your ServiceTelemetry object to v1beta1 or later." # noqa 204
  ignore_errors: True

- name: metricsEnabled
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: metrics_enabled is defined
  vars:
    var_combiner:
      backends:
        metrics:
          prometheus:
            enabled: '{{ metrics_enabled }}'

- name: eventsEnabled
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: events_enabled is defined
  vars:
    var_combiner:
      backends:
        events:
          elasticsearch:
            enabled: '{{ events_enabled }}'

- name: highAvailabilityEnabled
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: high_availability_enabled is defined
  vars:
    var_combiner:
      high_availability:
        enabled: '{{ high_availability_enabled }}'

- name: storageEphemeralEnabled set previous default of 'false' if not overridden.
  block:
    - name: Warning and variable setup
      vars:
        msg: |
          [WARNING] Setting storageEphemeralEnabled to v1alpha1 default of 'false'. Default in v1beta1 is 'true'.
                    In a future release of Service Telemetry Framework this functionality will be removed.
                    Please migrate to v1beta1 or later.
      fail:
        msg: "{{ msg.split('\n') }}"
      ignore_errors: True

    - name: Setting storageEphemeralEnabled to false the v1alpha1 default value
      set_fact:
        storage_ephemeral_enabled: false
  when: storage_ephemeral_enabled is not defined

- name: storageEphemeralEnabled
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: storage_ephemeral_enabled is defined
  vars:
    var_combiner:
      alerting:
        alertmanager:
          storage:
            strategy: '{{ "ephemeral" if storage_ephemeral_enabled else "persistent" }}'
      backends:
        metrics:
          prometheus:
            storage:
              strategy: '{{ "ephemeral" if storage_ephemeral_enabled else "persistent" }}'
        events:
          elasticsearch:
            storage:
              strategy: '{{ "ephemeral" if storage_ephemeral_enabled else "persistent" }}'

- name: graphingEnabled
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: graphing_enabled is defined
  vars:
    var_combiner:
      graphing:
        enabled: "{{ graphing_enabled }}"

- name: prometheusStorageClass
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: prometheus_storage_class is defined
  vars:
    var_combiner:
      backends:
        metrics:
          prometheus:
            storage:
              persistent:
                storage_class: "{{ prometheus_storage_class }}"

- name: prometheusStorageResources
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: prometheus_storage_resources is defined
  vars:
    var_combiner:
      backends:
        metrics:
          prometheus:
            storage:
              persistent:
                storage_resources: "{{ prometheus_storage_resources }}"

- name: prometheusStorageSelector
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: prometheus_storage_selector is defined
  vars:
    var_combiner:
      backends:
        metrics:
          prometheus:
            storage:
              persistent:
                storage_selector: "{{ prometheus_storage_selector }}"

- name: prometheusPvcStorageRequest
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: prometheus_pvc_storage_request is defined
  vars:
    var_combiner:
      backends:
        metrics:
          prometheus:
            storage:
              persistent:
                pvc_storage_request: "{{ prometheus_pvc_storage_request }}"

- name: alertmanagerStorageClass
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: alertmanager_storage_class is defined
  vars:
    var_combiner:
      alerting:
        alertmanager:
          storage:
            persistent:
              storage_class: "{{ alertmanager_storage_class }}"

- name: alertmanagerStorageResources
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: alertmanager_storage_resources is defined
  vars:
    var_combiner:
      alerting:
        alertmanager:
          storage:
            persistent:
              storage_resources: "{{ alertmanager_storage_resources }}"

- name: alertmanagerStorageSelector
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: alertmanager_storage_selector is defined
  vars:
    var_combiner:
      alerting:
        alertmanager:
          storage:
            persistent:
              storage_selector: "{{ alertmanager_storage_selector }}"

- name: alertmanagerPvcStorageRequest
  set_fact:
    servicetelemetry_vars: |
      {{ servicetelemetry_vars|combine(var_combiner, recursive=True) }}
  when: alertmanager_pvc_storage_request is defined
  vars:
    var_combiner:
      alerting:
        alertmanager:
          storage:
            persistent:
              pvc_storage_request: "{{ alertmanager_pvc_storage_request }}"
