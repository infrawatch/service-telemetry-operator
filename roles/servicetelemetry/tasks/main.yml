---
- debug:
    msg: INSTALLING SERVICE TELEMETRY

- name: Get information about the cluster
  set_fact:
    api_groups: "{{ lookup('k8s', cluster_info='api_groups') }}"
  when:
  - not is_openshift
  - not is_k8s

- name: Determine the cluster type
  set_fact:
    is_openshift: "{{ True if 'route.openshift.io' in api_groups else False }}"
    is_k8s: "{{ False if 'route.openshift.io' in api_groups else True }}"
  when:
  - not is_openshift
  - not is_k8s

- name: Indicate what kind of cluster we are in (OpenShift or Kubernetes).
  debug:
    msg: "CLUSTER TYPE: is_openshift={{ is_openshift }}; is_k8s={{ is_k8s }}"

- name: Fail when can't determine type of cluster
  fail:
    msg: "Cannot determine what type of cluster we are in"
  when:
  - not is_openshift
  - not is_k8s

- name: Adjust defaults for HA
  when: high_availability_enabled
  set_fact:
    elasticsearch_node_count: 3
    elasticsearch_redundancy_policy: FullRedundancy
    qdr_deployment_size: 2

- name: Create QDR instance
  include_tasks: component_qdr.yml

- name: Execute default tasks when metrics are requested to be enabled
  include_tasks: sa_metrics.yml
  when: metrics_enabled

- name: Execute default tasks when events are requested to be enabled
  include_tasks: sa_events.yml
  when: events_enabled

- name: Create Grafana instance
  include_tasks: component_grafana.yml
  when: graphing_enabled
