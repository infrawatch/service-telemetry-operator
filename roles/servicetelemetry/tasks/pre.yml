- name: Get information about the cluster
  set_fact:
    api_groups: "{{ lookup('k8s', cluster_info='api_groups') }}"
  when:
  - not is_openshift
  - not is_k8s

- name: Determine the cluster type
  set_fact:
    is_openshift: "{{ True if 'route.openshift.io' in api_groups else False }}"
    is_k8s: "{{ False if 'route.openshift.io' in api_groups else True }}"
  when:
  - not is_openshift
  - not is_k8s

- name: Indicate what kind of cluster we are in (OpenShift or Kubernetes).
  debug:
    msg: "CLUSTER TYPE: is_openshift={{ is_openshift }}; is_k8s={{ is_k8s }}"

- name: Fail when can't determine type of cluster
  fail:
    msg: "Cannot determine what type of cluster we are in"
  when:
  - not is_openshift
  - not is_k8s

- name: Adjust alerting.alertmanager.deployment_size defaults for HA
  set_fact:
    servicetelemetry_vars: "{{ servicetelemetry_vars|combine({'alerting':{'alertmanager':{'deployment_size': 2}}}, recursive=True) }}"

- name: Adjust backends.metrics.prometheus.deployment_size defaults for HA
  set_fact:
    servicetelemetry_vars: "{{ servicetelemetry_vars|combine({'backends':{'metrics':{'prometheus':{'deployment_size': 2}}}}, recursive=True) }}"

- name: Adjust backends.events.elasticsearch.node_code defaults for HA
  set_fact:
    servicetelemetry_vars: "{{ servicetelemetry_vars|combine({'backends':{'events':{'elasticsearch':{'node_count': 3}}}}, recursive=True) }}"

- name: Adjust transports.qdr.deployment_size defaults for HA
  set_fact:
    servicetelemetry_vars: "{{ servicetelemetry_vars|combine({'transports':{'qdr':{'deployment_size': 2}}}, recursive=True) }}"
  when: servicetelemetry_vars.high_availability.enabled

- name: Print some debug information
  vars:
    msg: |
      ServiceTelemetry Variables
      --------------------------------------------
      {{ servicetelemetry_vars | to_nice_yaml }}
  debug:
    msg: "{{ msg.split('\n') }}"
