apiVersion: {{ prometheus_operator_api_string }}
kind: Prometheus
metadata:
  labels:
    prometheus: '{{ ansible_operator_meta.name }}'
    {{ prometheus_operator_label }}
  name: '{{ ansible_operator_meta.name }}'
  namespace: '{{ ansible_operator_meta.namespace }}'
spec:
{% if observability_strategy != "use_community" %}
  version: null
{% else %}
  version: v2.43.0
{% endif %}
  replicas: {{ servicetelemetry_vars.backends.metrics.prometheus.deployment_size }}
  ruleSelector: {}
  securityContext: {}
  serviceAccountName: prometheus-stf
  serviceMonitorSelector:
    matchLabels:
      app: smart-gateway
  listenLocal: true
  podMetadata:
    labels:
      prometheus: '{{ ansible_operator_meta.name }}'
    annotations:
{% if servicetelemetry_vars.alerting.enabled %}
  alerting:
    alertmanagers:
    - name: '{{ ansible_operator_meta.name }}-alertmanager-proxy'
      namespace: '{{ ansible_operator_meta.namespace }}'
      port: web
      scheme: https
      tlsConfig:
        caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
        serverName: '{{ ansible_operator_meta.name }}-alertmanager-proxy.{{ ansible_operator_meta.namespace }}.svc'
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
{% endif %}
  retention: {{ servicetelemetry_vars.backends.metrics.prometheus.storage.retention }}
  containers:
  - name: oauth-proxy
    image: {{ oauth_proxy_image }}
    args:
    - -https-address=:9092
    - -tls-cert=/etc/tls/private/tls.crt
    - -tls-key=/etc/tls/private/tls.key
    - -upstream=http://localhost:9090/
    - -cookie-secret-file=/etc/proxy/secrets/session_secret
    - -openshift-service-account=prometheus-stf
    - '-openshift-sar={"namespace":"{{ ansible_operator_meta.namespace }}","resource": "prometheus", "group":"{{ prometheus_operator_api_string | replace("/v1","") }}", "verb":"get"}'
    - '-openshift-delegate-urls={"/":{"namespace":"{{ ansible_operator_meta.namespace }}","resource": "prometheus", "group":"{{ prometheus_operator_api_string | replace("/v1","") }}", "verb":"get"}}'

    ports:
      - containerPort: 9092
        name: https
        protocol: TCP
    volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-{{ ansible_operator_meta.name }}-prometheus-proxy-tls
      - mountPath: /etc/proxy/secrets
        name: secret-{{ ansible_operator_meta.name }}-session-secret
  configMaps:
    - serving-certs-ca-bundle
  secrets:
    - '{{ ansible_operator_meta.name }}-prometheus-proxy-tls'
    - '{{ ansible_operator_meta.name }}-session-secret'
{% if servicetelemetry_vars.backends.metrics.prometheus.storage.strategy == "persistent" %}
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: {{ servicetelemetry_vars.backends.metrics.prometheus.storage.persistent.pvc_storage_request }}
{% if servicetelemetry_vars.backends.metrics.prometheus.storage.persistent.storage_selector is defined %}
        selector: {{ servicetelemetry_vars.backends.metrics.prometheus.storage.persistent.storage_selector }}
{% endif %}
{% if servicetelemetry_vars.backends.metrics.prometheus.storage.persistent.storage_class | length %}
        storageClassName: {{ servicetelemetry_vars.backends.metrics.prometheus.storage.persistent.storage_class }}
{% endif %}
{% endif %}
