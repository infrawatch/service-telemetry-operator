apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: servicetelemetrys.infra.watch
spec:
  conversion:
    strategy: None
  group: infra.watch
  names:
    plural: servicetelemetrys
    singular: servicetelemetry
    kind: ServiceTelemetry
    listKind: ServiceTelemetryList
    shortNames:
    - stf
  scope: Namespaced
  versions:
  - name: v1beta1
    subresources:
      status: {}
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: ServiceTelemetry represents the Service Telemetry Framework resource in a kubernetes cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceTelemetrySpec holds the specification of an STF instance.
            properties:
              observabilityStrategy:
                description: 'The strategy to use for observability systems. Options are "none" (do not deploy any observability components), "use_community" (community supported operators), "use_redhat" (Red Hat Observability Operator with no unsupported components), "use_hybrid" (Red Hat Observability Operator + community supported operators).'
                type: string
                enum:
                - use_community
                - use_redhat
                - use_hybrid
                - none
              alerting:
                properties:
                  enabled:
                    description: Whether to enable alerting functionality
                    type: boolean
                  alertmanager:
                    description: Alertmanager configuration
                    properties:
                      receivers:
                        properties:
                          snmpTraps:
                            properties:
                              enabled:
                                description: Deploy container to send snmp traps
                                type: boolean
                              community:
                                description: 'Target community for SNMP traps. Default is "public"'
                                type: string
                              target:
                                description: 'Target address for SNMP traps to send to.'
                                type: string
                              retries:
                                description: 'SNMP trap delivery retry limit. Default is 5'
                                type: integer
                              timeout:
                                description: 'Response timeout, in seconds. Default is 1'
                                type: integer
                              port:
                                description: 'SNMP track delivery port. Default is 162'
                                type: integer
                              alertOidLabel:
                                description: 'Label for finding the OID. Default is "oid"'
                                type: string
                              trapOidPrefix:
                                description: 'OID prefix for the trap variable bindings. Default is "1.3.6.1.4.1.50495.15"'
                                type: string
                              trapDefaultOid:
                                description: 'The trap OID if none is found in the Prometheus alert labels. Default is "1.3.6.1.4.1.50495.15.1.2.1"'
                                type: string
                              trapDefaultSeverity:
                                description: 'The trap severity if none is found in the Prometheus alert labels. Default is empty.'
                                type: string
                            type: object
                        type: object
                      storage:
                        properties:
                          strategy:
                            description: Storage strategy. One of 'ephemeral' or 'persistent'. Persistent storage must be made available by the platform.
                            type: string
                            enum:
                            - ephemeral
                            - persistent
                          persistent:
                            properties:
                              storageClass:
                                description: Storage class name used for Alertmanager PVC
                                type: string
                              storageSelector:
                                description: Storage selector definition for Alertmanager
                                type: string
                              pvcStorageRequest:
                                description: PVC storage requested size for Alertmanager
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              highAvailability:
                description: High availability related configuration
                properties:
                  enabled:
                    description: Enable high availability globally for Service Telemetry
                    type: boolean
                type: object
              backends:
                description: Backend storage configuration
                properties:
                  metrics:
                    description: Metrics related backend configuration.
                    properties:
                      prometheus:
                        description: Metrics storage backend Prometheus
                        properties:
                          enabled:
                            description: Enable Prometheus as a storage backend for metrics
                            type: boolean
                          scrapeInterval:
                            description: How often Prometheus should be configured to scrape this endpoint. Value in seconds.
                            type: string
                          storage:
                            description: Metrics storage configuration for Prometheus
                            properties:
                              strategy:
                                description: Storage strategy. One of 'ephemeral' or 'persistent'. Persistent storage must be made available by the platform.
                                type: string
                                enum:
                                - ephemeral
                                - persistent
                              retention:
                                description: Time duration Prometheus shall retain data for. Default
                                  is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                                  (milliseconds seconds minutes hours days weeks years).
                                type: string
                                pattern: '^[0-9]+(ms|s|m|h|d|w|y)$'
                              persistent:
                                description: Persistent storage configuration for Prometheus
                                properties:
                                  storageClass:
                                    description: Storage class name used for Prometheus PVC
                                    type: string
                                  storageSelector:
                                    description: Storage selector definition for Prometheus
                                    type: string
                                  pvcStorageRequest:
                                    description: PVC storage requested size for Prometheus
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  events:
                    description: Events related backend configuration.
                    properties:
                      elasticsearch:
                        description: Events storage backend Elasticsearch
                        properties:
                          enabled:
                            description: Enable Elasticsearch as a storage backend for events
                            type: boolean
                          forwarding:
                            description: Configuration for where to forward events
                            type: object
                            properties:
                              hostUrl:
                                description: URL of Elasticsearch HTTP(S) endpoint
                                type: string
                              tlsServerName:
                                description: (if required) Server Name expected to match the certificate presented by the endpoint
                                type: string
                              tlsSecretName:
                                description: (if required) Name of the secret that stores the CA cert and client cert/key
                                type: string
                              userSecretName:
                                description: (if required) Name of the secret that stores the Basic Auth credentials
                                type: string
                              useBasicAuth:
                                description: Whether to provide HTTP Basic Auth headers
                                type: boolean
                              useTls:
                                description: Whether to enable TLS
                                type: boolean
                          version:
                            description: (DEPRECATED - Use forwarding params after STF 1.5.3) Version of Elasticsearch to deploy. Elasticsearch licensing has changed as of version 7.11. See https://www.elastic.co/pricing/faq/licensing for details.
                            type: string
                          nodeCount:
                            description: (DEPRECATED - Use forwarding params after STF 1.5.3) Elasticsearch node count
                            type: string
                          storage:
                            description: (DEPRECATED - Use forwarding params after STF 1.5.3) Events storage configuration for Elasticsearch
                            properties:
                              strategy:
                                description: (DEPRECATED - Use forwarding params after STF 1.5.3) Storage strategy. One of 'ephemeral' or 'persistent'. Persistent storage must be made available by the platform.
                                type: string
                                enum:
                                - ephemeral
                                - persistent
                              persistent:
                                description: (DEPRECATED - Use forwarding params after STF 1.5.3) Persistent storage configuration for Elasticsearch
                                properties:
                                  storageClass:
                                    description: (DEPRECATED - Use forwarding params after STF 1.5.3) Storage class name used for Elasticsearch PVC
                                    type: string
                                  storageSelector:
                                    description: (DEPRECATED - Use forwarding params after STF 1.5.3) Storage selector definition for Elasticsearch
                                    type: string
                                  pvcStorageRequest:
                                    description: (DEPRECATED - Use forwarding params after STF 1.5.3) How much storage space to request in the PVC
                                    type: string
                                type: object
                            type: object
                          certificates:
                            properties:
                              endpointCertDuration:
                                description: (DEPRECATED - Use forwarding params after STF 1.5.3) The requested 'duration' (i.e. lifetime) of the Elasticsearch endpoint Certificate.
                                  Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                                pattern: ^((([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                                type: string
                              caCertDuration:
                                description: (DEPRECATED - Use forwarding params after STF 1.5.3) The requested 'duration' (i.e. lifetime) of the Elasticsearch CA Certificate.
                                  Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                                pattern: ^((([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              transports:
                description: Data transport configuration
                properties:
                  qdr:
                    description: QDR configuration for data transport
                    properties:
                      enabled:
                        description: Enable QDR data transort
                        type: boolean
                      auth:
                        description: 'Auth type to use for incoming OSP connections. Options are "none", or "basic"'
                        type: string
                        enum:
                        - none
                        - basic
                      web:
                        description: QDR web configuration
                        properties:
                          enabled:
                            description: Enable web interface for QDR
                            type: boolean
                        type: object
                      certificates:
                        properties:
                          endpointCertDuration:
                            description: The requested 'duration' (i.e. lifetime) of the QDR endpoint Certificate.
                              Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                            pattern: ^((([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                          caCertDuration:
                            description: The requested 'duration' (i.e. lifetime) of the QDR CA Certificate.
                              Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration
                            pattern: ^((([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                        type: object
                    type: object
                type: object
              graphing:
                description: Graphing configuration
                properties:
                  enabled:
                    description: Whether the Service Telemetry Operator should deploy a graphing components and setup available datasources. If enabled will use default graphing components.
                    type: boolean
                  grafana:
                    description: Grafana related configuration
                    properties:
                      disableSignoutMenu:
                        description: Whether to disable the Grafana signout menu
                        type: boolean
                      ingressEnabled:
                        description: Whether to enable ingress access to Grafana
                        type: boolean
                      baseImage:
                        description: Path to the base container image used to instantiate a Grafana instance
                        type: string
                      dashboards:
                        description: Dashboard configurations for Grafana
                        properties:
                          enabled:
                            description: Whether to enable built-in dashboards provided by Service Telemetry Framework
                            type: boolean
                        type: object
                    type: object
                type: object
              cloudsRemoveOnMissing:
                description: If cloud object is missing from list on subsequent runs then delete the corresponding SmartGateway object. Default is 'true'.
                type: boolean
              clouds:
                description: A list of cloud objects
                items:
                  properties:
                    name:
                      description: Name of the cloud object. Must be alphanumeric and a maximum length of 10 characters.
                      type: string
                      pattern: ^[a-zA-Z0-9]{1,10}$
                    metrics:
                      description: Metrics related configuration for this cloud object.
                      properties:
                        collectors:
                          description: List of available metrics collectors for this cloud object
                          items:
                            properties:
                              collectorType:
                                description: Set the collector type, value of 'ceilometer', 'collectd' or 'sensubility'.
                                type: string
                                enum:
                                - ceilometer
                                - collectd
                                - sensubility
                              subscriptionAddress:
                                description: Address to subscribe on the data transport to receive telemetry.
                                type: string
                              debugEnabled:
                                description: Enable console debugging. Default is 'false'.
                                type: boolean
                              bridge:
                                description: Bridge configuration and tuning configurations.
                                properties:
                                  ringBufferCount:
                                    description: sg-bridge ring buffer count. This affects the potential number of messages in queue, which can result in increased memory usage within the sg-bridge container.
                                    type: integer
                                  ringBufferSize:
                                    description: sg-bridge ring buffer size. This affects the size of messages that can be passed between sg-bridge and sg-core.
                                    type: integer
                                  verbose:
                                    description: Enable verbosity for debugging purposes.
                                    type: boolean
                                type: object
                            type: object
                          type: array
                      type: object
                    events:
                      description: Events related configuration for this cloud object.
                      properties:
                        collectors:
                          description: List of available events collectors for this cloud object.
                          items:
                            properties:
                              collectorType:
                                description: Set the collector type, value of 'ceilometer' or 'collectd'.
                                type: string
                                enum:
                                - ceilometer
                                - collectd
                              subscriptionAddress:
                                description: Address to subscribe on the data transport to receive notifications.
                                type: string
                              debugEnabled:
                                description: Enable console debugging. Default is 'false'.
                                type: boolean
                              bridge:
                                description: Bridge configuration and tuning configurations.
                                properties:
                                  ringBufferCount:
                                    description: sg-bridge ring buffer count. This affects the potential number of messages in queue, which can result in increased memory usage within the sg-bridge container.
                                    type: integer
                                  ringBufferSize:
                                    description: sg-bridge ring buffer size. This affects the size of messages that can be passed between sg-bridge and sg-core.
                                    type: integer
                                  verbose:
                                    description: Enable verbosity for debugging purposes.
                                    type: boolean
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status results of an instance of Service Telemetry
            properties:
              conditions:
                description: The resulting conditions when a Service Telemetry is instantiated
                items:
                  properties:
                    status:
                      type: string
                    type:
                      type: string
                    reason:
                      type: string
                    lastTransitionTime:
                      type: string
                  type: object
                type: array
              ephemeralStorageEnabled:
                description: Whether ephemeral storage is enabled and a warning should be provided
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  status:
                    type: boolean
                type: object
            type: object
        type: object
