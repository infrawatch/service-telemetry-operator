---
- name: Get current BuildConfig for artifact to check if it exists
  set_fact:
    build_config_results: query('kubernetes.core.k8s', api_version='v1', kind='BuildConfig', namespace=namespace, resource_name=artifact.name)

- when: build_config_results | length == 0
  block:
  - name: Create BuildConfig and ImageStream
    shell: oc new-build -n "{{ namespace }}" --name {{ artifact.name }} --dockerfile - < {{ artifact.working_build_dir }}/{{ artifact.dockerfile_path }}

  - name: Kill first build since it will always fail (triggered on BuildConfig creation)
    shell: sleep 10 ; oc delete build {{ artifact.name }}-1 -n "{{ namespace }}"

  - name: Start local image build
    command: oc start-build {{ artifact.name }} -n "{{ namespace }}" --wait --from-dir "{{ artifact.working_build_dir }}"
    register: build_results

- name: Get latest build information for artifact
  command: oc get build --selector build={{ artifact.name }} -n "{{ namespace }}" -ojsonpath='{.items[-1:]}'
  register: build_describe_results

- name: Set build_describe from json results
  set_fact:
    build_describe: "{{ build_describe_results.stdout | from_json }}"

- debug:
    var: build_describe

- debug:
    var: build_describe.status.outputDockerImageReference

- name: Set unique image reference for this artifact
  set_fact:
    "{{ artifact.image_reference_name }}": "{{ build_describe.status.outputDockerImageReference }}"

- debug:
    var: "{{ artifact.image_reference_name }}"
