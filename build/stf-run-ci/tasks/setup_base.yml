---
- name: Setup OperatorHub dependencies
  when: not __disconnected_deploy | bool
  kubernetes.core.k8s:
    definition:
      apiVersion: config.openshift.io/v1
      kind: OperatorHub
      metadata:
        name: cluster
      spec:
        disableAllDefaultSources: true
        sources:
        - disabled: false
          name: certified-operators
        - disabled: false
          name: redhat-operators
        - disabled: false
          name: community-operators

# documented procedure: https://infrawatch.github.io/documentation/#deploying-service-telemetry-operator_assembly-installing-the-core-components-of-stf
- name: Create OperatorGroup for service-telemetry
  kubernetes.core.k8s:
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: service-telemetry-operator-group
        namespace: "{{ namespace }}"
      spec:
        targetNamespaces:
        - "{{ namespace }}"

# documented procedure: https://infrawatch.github.io/documentation/#deploying-observability-operator_assembly-installing-the-core-components-of-stf
- name: Subscribe to Red Hat Observability Operator
  kubernetes.core.k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        labels:
          operators.coreos.com/observability-operator.openshift-operators: ""
        name: cluster-observability-operator
        namespace: openshift-operators
      spec:
        channel: development
        installPlanApproval: Automatic
        name: cluster-observability-operator
        source: "{{ redhat_operators }}"
        sourceNamespace: openshift-marketplace
  when:
    - __service_telemetry_observability_strategy in ['use_redhat', 'use_hybrid']

# undocumented procedure, used for testing updates or old deployment models
- name: Subscribe to Prometheus Operator
  kubernetes.core.k8s:
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: prometheus
        namespace: "{{ namespace }}"
      spec:
        channel: beta
        installPlanApproval: Automatic
        name: prometheus
        source: "{{ community_operators }}"
        sourceNamespace: openshift-marketplace
  when:
    - __service_telemetry_observability_strategy == "use_community"

# documented procedure: https://infrawatch.github.io/documentation/#deploying-certificate-manager-for-openshift-operator_assembly-installing-the-core-components-of-stf
- block:
  - name: Create project for cert-manager for Red Hat OpenShift
    kubernetes.core.k8s:
      definition:
        apiVersion: project.openshift.io/v1
        kind: Project
        metadata:
          name: cert-manager-operator
        spec:
          finalizers:
          - kubernetes

  - name: Create OperatorGroup for cert-manager for Red hat OpenShift
    kubernetes.core.k8s:
      definition:
        apiVersion: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: cert-manager-operator
          namespace: cert-manager-operator
        spec:
          targetNamespaces:
          - cert-manager-operator
          upgradeStrategy: Default

  - name: Subscribe to cert-manager for Red Hat OpenShift Operator
    kubernetes.core.k8s:
      definition:
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          labels:
            operators.coreos.com/openshift-cert-manager-operator.service-telemetry: ""
          name: openshift-cert-manager-operator
          namespace: cert-manager-operator
        spec:
          channel: stable-v1
          installPlanApproval: Automatic
          name: openshift-cert-manager-operator
          source: "{{ redhat_operators }}"
          sourceNamespace: openshift-marketplace

# installed by properties.yaml definition as of STF 1.5.3
- when: __local_build_enabled | bool
  block:
    - name: Subscribe to AMQ Interconnect Operator
      kubernetes.core.k8s:
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: amq7-interconnect-operator
            namespace: "{{ namespace }}"
          spec:
            channel: 1.10.x
            installPlanApproval: Automatic
            name: amq7-interconnect-operator
            source: "{{ redhat_operators }}"
            sourceNamespace: openshift-marketplace

# undocumented procedure: used for backwards compatilibity verification
- block:
    - name: Subscribe to Elastic Cloud on Kubernetes Operator
      kubernetes.core.k8s:
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: elasticsearch-eck-operator-certified
            namespace: "{{ namespace }}"
          spec:
            channel: stable
            installPlanApproval: Automatic
            name: elasticsearch-eck-operator-certified
            source: "{{ certified_operators }}"
            sourceNamespace: openshift-marketplace

    - name: Wait for Elasticsearch CRD to appear
      kubernetes.core.k8s_info:
        api_version: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        name: elasticsearches.elasticsearch.k8s.elastic.co
      register: eckCRD
      until: eckCRD.resources[0] is defined
      retries: 5
      delay: 30
