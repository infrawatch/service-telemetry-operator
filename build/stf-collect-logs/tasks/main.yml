---
- name: "Get builds"
  ansible.builtin.shell:
    cmd: |
      echo "*** [INFO] Showing oc get builds" > {{ logfile_dir }}/post_oc_get_builds.log 2>&1
      oc -n {{ namespace }} get builds -oyaml >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
      echo "*** [INFO] Showing oc get builds -oyaml" >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
      oc -n {{ namespace }} get builds -oyaml >> {{ logfile_dir }}/post_oc_get_builds.log 2>&1
      cat {{ logfile_dir }}/post_oc_get_builds.log
  ignore_errors: true
  changed_when: false

- name: "Get subscription details"
  ansible.builtin.shell:
    cmd: |
      oc -n {{ namespace }} get subscriptions > {{ logfile_dir }}/post_oc_get_subscriptions.log 2>&1
      oc -n {{ namespace }} describe subscription service-telemetry-operator >> {{ logfile_dir }}/post_oc_get_subscriptions.log 2>&1
  ignore_errors: true

- name: "Get image infos"
  ansible.builtin.shell:
    cmd: |
      echo "[INFO] oc  get images" > {{ logfile_dir }}/post_oc_get_images.log 2>&1
      oc -n {{ namespace }} get images >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
      echo "[INFO] oc  get imagestreams" >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
      oc -n {{ namespace }} get imagestream >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
      echo "[INFO] oc  get imagestream -oyaml" >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
      oc -n {{ namespace }} get imagestream -oyaml >> {{ logfile_dir }}/post_oc_get_images.log 2>&1
  retries: 3
  delay: 10
  ignore_errors: true

- name: "Get STO info"
  ansible.builtin.shell:
    cmd: |
      oc -n {{ namespace }} describe pod $(oc -n {{ namespace }} get pod -l name=service-telemetry-operator -ojsonpath='{ .items[].metadata.name }') >> {{ logfile_dir }}/describe_sto.log 2>&1
  ignore_errors: true
  retries: 3
  delay: 10

- name: "Question the deployment"
  ansible.builtin.shell:
    cmd: |
      echo "What images were created in the internal registry?" > {{ logfile_dir }}/post_question_deployment.log 2>&1
      oc -n {{ namespace }} get images | grep $(oc -n {{ namespace }} registry info --internal) >> {{ logfile_dir }}/post_question_deployment.log 2>&1
      echo "What state is the STO csv in?" >> {{ logfile_dir }}/post_question_deployment.log 2>&1
      oc -n {{ namespace }} get csv | grep service-telemetry-operator >> {{ logfile_dir }}/post_question_deployment.log 2>&1
      oc -n {{ namespace }} get csv $(oc -n {{ namespace }} get csv | grep "service-telemetry-operator" | awk '{ print $1}') -oyaml >> {{ logfile_dir }}/post_question_deployment.log 2>&1
  register: output
  ignore_errors: true
  retries: 3
  delay: 10

- name: "Get pods"
  ansible.builtin.command:
    cmd: |
      oc -n {{ namespace }} get pods > {{ logfile_dir }}/post_oc_get_pods.log 2>&1
  ignore_errors: true
  retries: 3
  delay: 10

- name: "Describe non-completed, non-running pods"
  ansible.builtin.shell:
    cmd: |
      for pod in $(oc get pods | grep -v NAME | grep -v Running | awk '{ print $1 }');
      do
        oc -n {{ namespace }} describe pod $pod > {{ logfile_dir }}/post_oc_describe_pod_${pod}.log 2>&1
      done
  ignore_errors: true
  retries: 3
  delay: 10

- name: "Describe builds"
  ansible.builtin.shell:
    cmd: |
      for build in $(oc -n {{ namespace }} get builds -o json | jq -r '.items[].metadata.name');
      do
        oc -n {{ namespace }} describe build $build > {{ logfile_dir }}/post_oc_describe_build_${build}.log 2>&1
      done
  ignore_errors: true
  retries: 3
  delay: 10
